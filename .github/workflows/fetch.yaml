name: Fetch new data when a new version is released

on:
  schedule:
    - cron: '0 * * * *'  # Check hourly
  workflow_dispatch:     # Allow manual triggering

jobs:
  precheck:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.new_version.outputs.version }}
      current_version: ${{ steps.current_version.outputs.version }}
      should_update: ${{ steps.check_versions.outputs.should_update }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'master'
      - id: new_version
        name: Fetch latest Dota 2 version
        run: |
          echo "version=$(curl -s 'https://api.steampowered.com/IGCVersion_570/GetClientVersion/v1/' | jq -r .result.active_version)" >> $GITHUB_OUTPUT
      - id: current_version
        name: Get current version
        run: |
          echo "version=$(cat version)" >> $GITHUB_OUTPUT
      - id: check_versions
        name: Compare versions
        run: |
          if [[ "${{ steps.new_version.outputs.version }}" != "${{ steps.current_version.outputs.version }}" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "should_update=true" >> $GITHUB_OUTPUT
          else
            echo "should_update=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: Fetch and build new source strings
    needs: precheck
    if: ${{ needs.precheck.outputs.should_update == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'master'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update version file
        run: echo ${{ needs.precheck.outputs.new_version }} > version

      - name: Build constants
        run: npm run build

      - name: Run code formatting
        run: npm run prettier
      - name: Update package version
        run: npm version patch -m "Update to Dota 2 version ${{ needs.precheck.outputs.new_version }}"

      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add .
          git diff --staged --quiet || git commit -m "Update to Dota 2 version ${{ needs.precheck.outputs.new_version }}"
          git push --follow-tags
