name: Fetch new data when d2vpkr is updated

on:
  workflow_dispatch:     # Allow manual triggering
  schedule:
    - cron: '0 * * * *'  # Check hourly for updates

jobs:
  precheck:
    name: Check for updates
    runs-on: ubuntu-latest
    outputs:
      latest_commit: ${{ steps.latest_commit.outputs.sha }}
      current_commit: ${{ steps.current_commit.outputs.sha }}
      should_update: ${{ steps.check_commits.outputs.should_update }}
      new_version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'master'
      - id: latest_commit
        name: Fetch latest d2vpkr commit
        run: |
          echo "sha=$(curl -s 'https://api.github.com/repos/dotabuff/d2vpkr/commits/master' | jq -r .sha)" >> $GITHUB_OUTPUT
      - id: current_commit
        name: Get current tracked commit
        run: |
          if [ -f d2vpkr_commit ]; then
            echo "sha=$(cat d2vpkr_commit)" >> $GITHUB_OUTPUT
          else
            echo "sha=" >> $GITHUB_OUTPUT
          fi
      - id: check_commits
        name: Compare commits
        run: |
          if [[ "${{ steps.latest_commit.outputs.sha }}" != "${{ steps.current_commit.outputs.sha }}" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "should_update=true" >> $GITHUB_OUTPUT
          else
            echo "should_update=false" >> $GITHUB_OUTPUT
          fi
      - id: get_version
        name: Get Dota 2 version
        if: steps.check_commits.outputs.should_update == 'true'
        run: |
          echo "version=$(curl -s 'https://api.steampowered.com/IGCVersion_570/GetClientVersion/v1/' | jq -r .result.active_version)" >> $GITHUB_OUTPUT

  build:
    name: Fetch and build new source strings
    needs: precheck
    if: ${{ needs.precheck.outputs.should_update == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'master'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update version and commit tracking
        run: |
          echo ${{ needs.precheck.outputs.new_version }} > version
          echo ${{ needs.precheck.outputs.latest_commit }} > d2vpkr_commit

      - name: Build constants
        run: npm run build

      - name: Run code formatting
        run: npm run prettier

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Commit changes and set update flag
        id: commit_changes
        run: |
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Update based on d2vpkr changes (Dota 2 version ${{ needs.precheck.outputs.new_version }})"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Update package version
        if: steps.commit_changes.outputs.has_changes == 'true'
        run: npm version patch -m "Update to Dota 2 version ${{ needs.precheck.outputs.new_version }}"

      - name: Push changes
        run: git push --follow-tags
